{"version":3,"sources":["Home.js","AnswerChoice.js","DadJoke.js","Pun.js","JokeGame.js","Wiki.js","QuoteGame.js","App.js","reportWebVitals.js","index.js"],"names":["Home","props","className","onClick","this","app","startJokeGame","startQuoteGame","React","Component","AnswerChoice","style","feedback","text","DadJoke","state","error","isLoaded","data","axios","get","headers","then","result","setState","message","joke","JokeGame","category","score","canGuess","correct","dadJoke","categories","fetchJoke","bind","guess","answer","jokeHighScore","jokeText","type","setup","delivery","Wiki","url","params","action","search","author","limit","namespace","format","Object","keys","forEach","key","console","log","href","target","QuoteGame","quote","tags","answersLoaded","answerChoices","fetchQuote","setAnswerChoices","quoteHighScore","content","tag","options","Set","results","add","correctIndex","Math","floor","random","choices","Array","optionArray","i","push","splice","length","App","screen","goHome","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.883a84a8.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default class Home extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <section className=\"section\">\n                <div className=\"container block has-text-centered\">\n                    <p className=\"title\">\n                        APIGuessr!\n                    </p>\n                    <p className=\"subtitle\">\n                        Fun guessing games involving silly REST APIs!\n                    </p>\n                </div>\n                <div className=\"level\">\n                    <button className=\"button is-large level-item\" onClick={this.props.app.startJokeGame}>Joke API Guessr</button>\n                    <button className=\"button is-large level-item\" onClick={this.props.app.startQuoteGame}>Famous Quote Guessr</button>\n                </div>\n            </section>\n        );\n    }\n}\n","import React from \"react\";\n\nexport default class AnswerChoice extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        let style = \"button\";\n        if (this.props.feedback === \"correct\") style += \" is-success\";\n        else if (this.props.feedback === \"incorrect\") style += \" is-danger\"\n        return (\n            <div className=\"column\">\n                <button className={style} onClick={() => {this.props.onClick(this.props.text);}}>\n                    {this.props.text}\n                </button>\n            </div>\n        );\n    }\n}","import React, { Component } from \"react\";\nimport axios from 'axios';\n\nexport default class DadJoke extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            data: null\n        };\n    }\n\n    componentDidMount() {\n        axios.get(\"https://icanhazdadjoke.com/\", {\n            headers: {\n                'Accept': 'application/json',\n                'User-Agent': 'Ryland - rylandd@me.com'\n            }\n        }).then(\n            result => {\n                this.setState({\n                    isLoaded: true,\n                    data: result.data\n                });\n            },\n            // Note: it's important to handle errors here\n            // instead of a catch() block so that we don't swallow\n            // exceptions from actual bugs in components.\n            error => {\n                this.setState({\n                    isLoaded: true,\n                    error\n                });\n            }\n        );\n    }\n\n    render() {\n        const { error, isLoaded, data } = this.state;\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n            return <div className=\"box\">Loading...</div>;\n        } else {\n            return (\n                <div className=\"notification is-success\">Way to go! Here's a bonus dad joke: {data.joke}</div>\n            );\n        }\n    }\n}","import React, { Component } from \"react\";\nimport axios from 'axios';\n\nexport default class Pun extends Component {\n    state = {\n        error: null,\n        isLoaded: false,\n        data: null\n    };\n\n    componentDidMount() {\n        axios.get(\"https://v2.jokeapi.dev/joke/Any\", {\n            headers: {\n                'Accept': 'application/json',\n                'User-Agent': 'Ryland - rylandd@me.com'\n            }\n        }).then(\n            result => {\n                this.setState({\n                    isLoaded: true,\n                    data: result.data\n                });\n            },\n            // Note: it's important to handle errors here\n            // instead of a catch() block so that we don't swallow\n            // exceptions from actual bugs in components.\n            error => {\n                this.setState({\n                    isLoaded: true,\n                    error\n                });\n            }\n        );\n    }\n\n    render() {\n        const { error, isLoaded, data } = this.state;\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n            return <div>Loading...</div>;\n        } else {\n            if (data.type === \"single\") {\n                return (\n                    <div>{data.joke}</div>\n                );\n            }\n            else {\n                return (\n                    <div>{data.setup} {data.delivery}</div>\n                )\n            }\n        }\n    }\n}","import React from \"react\";\nimport AnswerChoice from './AnswerChoice'\nimport Pun from './Pun';\nimport axios from \"axios\";\nimport DadJoke from \"./DadJoke\";\n\nexport default class JokeGame extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            joke: {\n                error: null,\n                isLoaded: false,\n                data: null,\n                category: null\n            },\n            score: 0,\n            canGuess: false,\n            feedback: false,\n            correct: null,\n            dadJoke: false\n        }\n        this.categories = [\"Programming\",\"Misc\",\"Dark\",\"Pun\",\"Spooky\",\"Christmas\"];\n        this.fetchJoke = this.fetchJoke.bind(this);\n        this.guess = this.guess.bind(this);\n    }\n\n    componentDidMount() {\n        this.setState({\n            score: 0,\n        })\n        this.fetchJoke();\n    }\n\n    guess(answer) {\n        if (this.state.canGuess === false) {\n            return;\n        }\n        this.setState({\n            canGuess: false,\n            feedback: true\n        });\n        if (answer === this.state.joke.category) {\n            this.setState({\n                score: this.state.score + 1,\n                dadJoke: true\n            });\n        }\n        else {\n            if (this.state.score > this.props.app.state.jokeHighScore) {\n                this.props.app.setState({jokeHighScore: this.state.score});\n            }\n            this.setState({score: 0});\n        }\n        //this.fetchJoke();\n    }\n\n    fetchJoke() {\n        this.setState({\n            joke: {\n                error: null,\n                isLoaded: false,\n                data: null,\n                category: null\n            },\n            feedback: false,\n            correct: null,\n            dadJoke: false\n        })\n        axios.get(\"https://v2.jokeapi.dev/joke/Any?blacklistFlags=nsfw,religious,political,racist,sexist,explicit\", {\n            headers: {\n                'Accept': 'application/json',\n                'User-Agent': 'Ryland - rylandd@me.com'\n            }\n        }).then(\n            result => {\n                let jokeText;\n                if (result.data.type === \"single\") {\n                    jokeText = result.data.joke;\n                }\n                else jokeText = result.data.setup + \" \" + result.data.delivery;\n                this.setState({\n                    joke: {\n                        isLoaded: true,\n                        data: jokeText,\n                        category: result.data.category\n                    },\n                    canGuess: true,\n                    correct: result.data.category\n                });\n            },\n            // Note: it's important to handle errors here\n            // instead of a catch() block so that we don't swallow\n            // exceptions from actual bugs in components.\n            error => {\n                this.setState({\n                    joke: {\n                        isLoaded: true,\n                        error: error\n                    }\n                });\n            }\n        );\n    }\n\n    render () {\n\n        return (\n            <div className=\"section\">\n                <div className=\"container has-text-centered\">\n                    <h1 className=\"title\">Joke API Guessr</h1>\n                    <h2 className=\"subtitle\">Which category of joke is this?</h2>\n                    <p className=\"box\">Streak: {this.state.score} | Best: {this.props.app.state.jokeHighScore}</p>\n                    <div className=\"block\">\n                        <div className=\"box\">\n                            {this.state.joke.isLoaded === true ? this.state.joke.data : \"Loading...\"}\n                        </div>\n                        {this.state.joke.isLoaded &&\n                            <div className=\"columns\">\n                                <AnswerChoice text=\"Programming\" onClick={this.guess}\n                                              feedback={this.state.feedback ?\n                                                  (this.state.correct === \"Programming\" ? \"correct\" : \"incorrect\") : \"\"}></AnswerChoice>\n                                <AnswerChoice text=\"Misc\" onClick={this.guess}\n                                              feedback={this.state.feedback ?\n                                                  (this.state.correct === \"Misc\" ? \"correct\" : \"incorrect\") : \"\"}></AnswerChoice>\n                                <AnswerChoice text=\"Dark\" onClick={this.guess}\n                                              feedback={this.state.feedback ?\n                                                  (this.state.correct === \"Dark\" ? \"correct\" : \"incorrect\") : \"\"}></AnswerChoice>\n                                <AnswerChoice text=\"Pun\" onClick={this.guess}\n                                              feedback={this.state.feedback ?\n                                                  (this.state.correct === \"Pun\" ? \"correct\" : \"incorrect\") : \"\"}></AnswerChoice>\n                                <AnswerChoice text=\"Spooky\" onClick={this.guess}\n                                              feedback={this.state.feedback ?\n                                                  (this.state.correct === \"Spooky\" ? \"correct\" : \"incorrect\") : \"\"}></AnswerChoice>\n                                <AnswerChoice text=\"Christmas\" onClick={this.guess}\n                                              feedback={this.state.feedback ?\n                                                  (this.state.correct === \"Christmas\" ? \"correct\" : \"incorrect\") : \"\"}></AnswerChoice>\n                            </div>\n                        }\n                    </div>\n                    {this.state.feedback &&\n                    <button className=\"button is-info mb-3\" onClick={this.fetchJoke}>\n                        Next\n                    </button>\n                    }\n\n                    {this.state.dadJoke &&\n                        <DadJoke></DadJoke>\n                    }\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport axios from 'axios';\n\nexport default class Wiki extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            data: null\n        };\n    }\n\n    componentDidMount() {\n        let url = \"https://en.wikipedia.org/w/api.php?origin=*\";\n        const params = {\n            action: \"opensearch\",\n            search: this.props.author,\n            limit: \"1\",\n            namespace: \"0\",\n            format: \"json\"\n        };\n        Object.keys(params).forEach(key=>{\n            url += `&${key}=${params[key]}`;\n        });\n        console.log(url);\n        axios.get(url, {\n            headers: {\n                'User-Agent': 'Ryland - rylandd@me.com'\n            }\n        }).then(\n            result => {\n                console.log(result.data[3][0]);\n                this.setState({\n                    data:result.data[3][0],\n                    isLoaded: true\n                })\n            },\n            // Note: it's important to handle errors here\n            // instead of a catch() block so that we don't swallow\n            // exceptions from actual bugs in components.\n            error => {\n                this.setState({\n                    isLoaded: true,\n                    error\n                });\n            }\n        );\n    }\n\n    render() {\n        const { error, isLoaded, data } = this.state;\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n            return <div>Loading...</div>;\n        } else {\n            return (\n                <div className=\"notification is-info\">Find out more about this quote's author <a href={data} target=\"_blank\">here</a></div>\n            );\n        }\n    }\n}","import React from \"react\";\nimport AnswerChoice from './AnswerChoice';\nimport axios from \"axios\";\nimport Wiki from \"./Wiki\";\n\nexport default class QuoteGame extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            quote: {\n                error: null,\n                isLoaded: false,\n                text: null,\n                author: null,\n                tags: null\n            },\n            score: 0,\n            canGuess: false,\n            answersLoaded: false,\n            answerChoices: null,\n            feedback: false,\n            correct: null\n        }\n        this.guess = this.guess.bind(this);\n        this.fetchQuote = this.fetchQuote.bind(this);\n        this.setAnswerChoices = this.setAnswerChoices.bind(this);\n    }\n\n    componentDidMount() {\n        this.setState({\n            score: 0,\n        })\n        this.fetchQuote();\n    }\n\n    guess(answer) {\n        if (this.state.canGuess === false) {\n            return;\n        }\n        this.setState({\n            canGuess: false,\n            feedback: true\n        });\n        if (answer === this.state.quote.author) {\n            this.setState({\n                score: this.state.score + 1,\n            });\n        }\n        else {\n            if (this.state.score > this.props.app.state.quoteHighScore) {\n                this.props.app.setState({quoteHighScore: this.state.score});\n            }\n            this.setState({score: 0});\n        }\n\n        //this.fetchQuote();\n    }\n\n    fetchQuote() {\n        axios.get(\"http://api.quotable.io/random\", {\n            headers: {\n                'User-Agent': 'Ryland - rylandd@me.com'\n            }\n        }).then(\n            result => {\n                this.setState({\n                    quote: {\n                        text: result.data.content,\n                        author: result.data.author,\n                        tags: result.data.tags,\n                        isLoaded: true\n                    },\n                    feedback: false,\n                    answersLoaded: false,\n                    answerChoices: null,\n                    correct: null\n                });\n                this.setAnswerChoices();\n            },\n            // Note: it's important to handle errors here\n            // instead of a catch() block so that we don't swallow\n            // exceptions from actual bugs in components.\n            error => {\n                this.setState({\n                    isLoaded: true,\n                    error\n                });\n            }\n        );\n    }\n\n    setAnswerChoices () {\n        let url = \"http://api.quotable.io/quotes?tags=\";\n        this.state.quote.tags.forEach(tag => {\n            url += tag + \"|\";\n        });\n        axios.get(url,{\n            headers: {\n                'User-Agent': 'Ryland - rylandd@me.com'\n            }\n        }).then(\n            result => {\n                let options = new Set();\n                result.data.results.forEach(quote => {\n                    if (quote.author !== this.state.quote.author) {\n                        options.add(quote.author);\n                    }\n                });\n                let correctIndex = Math.floor(Math.random() * 4);\n                let choices = new Array(0);\n                let optionArray = [...options];\n                for (let i = 0; i < 4; i++) {\n                    if (i === correctIndex) {\n                        choices.push(this.state.quote.author);\n                    }\n                    else {\n                        choices.push(optionArray.splice(Math.floor(Math.random()*optionArray.length),1)[0]);\n                    }\n                }\n                this.setState({\n                    answerChoices: choices,\n                    canGuess: true,\n                    answersLoaded: true,\n                    correct: correctIndex\n                });\n            },\n            error => {\n                this.setState({\n                    isLoaded: true,\n                    error\n                });\n            }\n        );\n    }\n\n    render () {\n\n        return (\n            <div className=\"section\">\n                <div className=\"container has-text-centered\">\n                    <h1 className=\"title\">Famous Quote API Guessr</h1>\n                    <h2 className=\"subtitle\">Who said this famous quote?</h2>\n                    <p className=\"box\">Streak: {this.state.score} | Best: {this.props.app.state.quoteHighScore}</p>\n                    <div className=\"block\">\n                        <div className=\"box\">\n                            {this.state.quote.isLoaded ? this.state.quote.text : \"Loading...\"}\n                        </div>\n                        {this.state.answersLoaded &&\n                        <div className=\"columns\">\n                            <AnswerChoice\n                                text={this.state.answerChoices[0]}\n                                onClick={this.guess}\n                                feedback={this.state.feedback ?\n                                    (this.state.correct === 0 ? \"correct\" : \"incorrect\") : \"\"}></AnswerChoice>\n                            <AnswerChoice\n                                text={this.state.answerChoices[1]}\n                                onClick={this.guess}\n                                feedback={this.state.feedback ?\n                                    (this.state.correct === 1 ? \"correct\" : \"incorrect\") : \"\"}></AnswerChoice>\n                            <AnswerChoice\n                                text={this.state.answerChoices[2]}\n                                onClick={this.guess}\n                                feedback={this.state.feedback ?\n                                    (this.state.correct === 2 ? \"correct\" : \"incorrect\") : \"\"}></AnswerChoice>\n                            <AnswerChoice\n                                text={this.state.answerChoices[3]}\n                                onClick={this.guess}\n                                feedback={this.state.feedback ?\n                                    (this.state.correct === 3 ? \"correct\" : \"incorrect\") : \"\"}></AnswerChoice>\n                        </div>\n                        }\n                    </div>\n                    {this.state.feedback &&\n                        <button className=\"button is-info mb-3\" onClick={this.fetchQuote}>\n                            Next\n                        </button>\n                    }\n                    {this.state.feedback &&\n                        <Wiki author={this.state.quote.author}></Wiki>\n                    }\n                </div>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport Home from './Home.js';\nimport JokeGame from './JokeGame.js';\nimport QuoteGame from \"./QuoteGame\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      screen: (<Home app={this}/>),\n      jokeHighScore: 0,\n      quoteHighScore: 0\n    };\n    this.startJokeGame = this.startJokeGame.bind(this);\n    this.startQuoteGame = this.startQuoteGame.bind(this);\n    this.goHome = this.goHome.bind(this);\n  }\n\n  startJokeGame () {\n    this.setState({screen: (<JokeGame app={this}/>)});\n  }\n\n  startQuoteGame () {\n    this.setState({screen: (<QuoteGame app={this}/>)});\n  }\n\n  goHome () {\n    this.setState({screen: (<Home app={this}/>)});\n  }\n\n  render() {\n    return (\n        <div>\n          <nav className=\"navbar\">\n            <div className=\"navbar-brand\">\n              <button className=\"button navbar-item\" onClick={this.goHome}>Home</button>\n            </div>\n          </nav>\n          {this.state.screen}\n        </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}